// This file is generated by kconfig_compiler_kf5 from test1.kcfg.
// All changes you do to this file will be lost.
#ifndef TEST1_H
#define TEST1_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>

#include <qdir.h>
class Test1 : public KConfigSkeleton
{
  public:
    class EnumListOption
    {
      public:
      enum type { One, Two, Three, COUNT };
    };

    Test1( const QString & transport, const QString & folder, QObject *parent = nullptr );
    ~Test1();

    /**
      Set One option
    */
    void setOneOption( bool v )
    {
      if (!isImmutable( QStringLiteral( "OneOption" ) ))
        mOneOption = v;
    }

    /**
      Get One option
    */
    bool oneOption() const
    {
      return mOneOption;
    }

    /**
      Set Another option
    */
    void setAnotherOption( int v )
    {
      if (!isImmutable( QStringLiteral( "AnotherOption" ) ))
        mAnotherOption = v;
    }

    /**
      Get Another option
    */
    int anotherOption() const
    {
      return mAnotherOption;
    }

    /**
      Set This is some funky option
    */
    void setListOption( int v )
    {
      if (!isImmutable( QStringLiteral( "ListOption" ) ))
        mListOption = v;
    }

    /**
      Get This is some funky option
    */
    int listOption() const
    {
      return mListOption;
    }

    /**
      Set This is a string
    */
    void setMyString( const QString & v )
    {
      if (!isImmutable( QStringLiteral( "MyString" ) ))
        mMyString = v;
    }

    /**
      Get This is a string
    */
    QString myString() const
    {
      return mMyString;
    }

    /**
      Set This is a path
    */
    void setMyPath( const QString & v )
    {
      if (!isImmutable( QStringLiteral( "MyPath" ) ))
        mMyPath = v;
    }

    /**
      Get This is a path
    */
    QString myPath() const
    {
      return mMyPath;
    }

    /**
      Set Another option
    */
    void setAnotherOption2( int v )
    {
      if (!isImmutable( QStringLiteral( "AnotherOption2" ) ))
        mAnotherOption2 = v;
    }

    /**
      Get Another option
    */
    int anotherOption2() const
    {
      return mAnotherOption2;
    }

    /**
      Set MyStringList
    */
    void setMyStringList( const QStringList & v )
    {
      if (!isImmutable( QStringLiteral( "MyStringList" ) ))
        mMyStringList = v;
    }

    /**
      Get MyStringList
    */
    QStringList myStringList() const
    {
      return mMyStringList;
    }

    /**
      Set MyStringListHidden
    */
    void setMyStringListHidden( const QStringList & v )
    {
      if (!isImmutable( QStringLiteral( "MyStringListHidden" ) ))
        mMyStringListHidden = v;
    }

    /**
      Get MyStringListHidden
    */
    QStringList myStringListHidden() const
    {
      return mMyStringListHidden;
    }

    /**
      Set List Number
    */
    void setMyNumber( int v )
    {
      if (!isImmutable( QStringLiteral( "MyNumber" ) ))
        mMyNumber = v;
    }

    /**
      Get List Number
    */
    int myNumber() const
    {
      return mMyNumber;
    }

  protected:
    QString mParamtransport;
    QString mParamfolder;

    // General-$(folder)
    bool mOneOption;
    int mAnotherOption;
    int mListOption;

    // MyOptions
    QString mMyString;
    QString mMyPath;
    int mAnotherOption2;
    QStringList mMyStringList;
    QStringList mMyStringListHidden;
    int mMyNumber;

  private:
};

#endif

